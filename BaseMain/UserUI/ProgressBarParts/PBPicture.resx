<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACDAI0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACisnxT4s0PwNoV1rfiTWdP8P6L
        a7ftGo6pdJbW8O5gi75HIVcsyqMnksB1NeK+Ov2/P2efh39h/tX4seH7v7Zv8v8AsKV9X27NufM+xrL5
        f3hjft3YbGdrYAPoCivz+f8A4LOfCrVEay8N+A/H+teIrkeTpumNZWiC7um4hhLJcSON7lVysbsM8Kx4
        MNv/AMFYtS8HOb34rfs7eOvh/wCHZB5NvqcYa4Mt0eVh23ENqgyiytkSFvk+6QSV554ijTnGlOaUpbJt
        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
</value>
  </data>
</root>